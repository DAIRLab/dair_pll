<?xml version="1.0" ?>
<robot name="spherebot" 
  xmlns:xacro="http://www.ros.org/wiki/xacro"
  xmlns:drake="https://drake.mit.edu/">

  <!-- Define the global worldfixed and place all other objects relative to it. 
        Note: It is hard-coded in PLL right now to weld worldfixed to Drake world.
  -->
  <xacro:arg name="is_worldfixed" default="true" />
  <xacro:if value="$(arg is_worldfixed)">
    <xacro:property name="global_frame" value="worldfixed" />
  </xacro:if>
  <xacro:unless value="$(arg is_worldfixed)">
    <xacro:property name="global_frame" value="worldfloat" />
  </xacro:unless>
  <link name="${global_frame}" />
  
  <!-- Only use a single material for now -->
  <material name="sphere_material">
    <color rgba="0.6 0.0 0.0 1.0"/>
  </material>

  <!-- Simple transmission for all prismatic joints -->
  <xacro:macro name="default_trans" params="joint">
    <transmission name="${name}_trans" type="SimpleTransmission">
      <actuator name="${joint}_act"/>
      <joint name="${joint}"/>
      <mechanicalReduction>1</mechanicalReduction>
    </transmission>
  </xacro:macro>

  <!-- Finger Macro -->
  <xacro:macro name="finger" params="name radius mass mu fixed_x fixed_y fixed_z">
    <link name="${name}">
     <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <sphere radius="${radius}"/>
        </geometry>
        <material name="sphere_material"/>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <sphere radius="${radius}"/>
        </geometry>
        <drake:proximity_properties>
          <drake:mu_static value="${mu}"/>
          <drake:mu_dynamic value="${mu}"/>
          <drake:rigid_hydroelastic />
          <drake:mesh_resolution_hint value="0.001" />
          <drake:point_contact_stiffness value="10800.0" />
          <drake:hunt_crossley_dissipation value="0.4" />
        </drake:proximity_properties>
      </collision>
      <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="${mass}"/>
        <inertia
                  ixx="${0.4 * mass * radius * radius}"
                  ixy="0"
                  ixz="0"
                  iyy="${0.4 * mass * radius * radius}"
                  iyz="0"
                  izz="${0.4 * mass * radius * radius}"/>
      </inertial>
    </link>

    <!-- X Joint -->
    <link name="${name}_fake_x" />
    <joint name="${name}_to_base_x" type="${'prismatic' if (fixed_x is False)  else 'fixed'}">
      <origin xyz="${0 if (fixed_x == False) else fixed_x} 0 0" />
      <parent link="${global_frame}"/>
      <child link="${name}_fake_x"/>
      <axis xyz="1 0 0"/>
    </joint>
    <xacro:if value="${fixed_x is False}">
      <xacro:default_trans joint="${name}_to_base_x" />
    </xacro:if>

    <!-- Y Joint -->
    <link name="${name}_fake_y" />
    <joint name="${name}_to_base_y" type="${'prismatic' if (fixed_y is False)  else 'fixed'}">
      <origin xyz="0 ${0 if (fixed_y == False) else fixed_y} 0" />
      <parent link="${name}_fake_x"/>
      <child link="${name}_fake_y"/>
      <axis xyz="0 1 0"/>
    </joint>
    <xacro:if value="${fixed_y is False}">
      <xacro:default_trans joint="${name}_to_base_y" />
    </xacro:if>

    <!-- Z Joint -->
    <joint name="${name}_to_base_z" type="${'prismatic' if (fixed_z is False)  else 'fixed'}">
      <origin xyz="0 0 ${0 if (fixed_z == False) else fixed_z}" />
      <parent link="${name}_fake_y"/>
      <child link="${name}"/>
      <axis xyz="0 0 1"/>
    </joint>
    <xacro:if value="${fixed_z is False}">
      <xacro:default_trans joint="${name}_to_base_z" />
    </xacro:if>
  </xacro:macro>

  <!-- Specify number of fingers and other arguments -->
  <xacro:arg name="num_fingers" default="1" />
  <xacro:arg name="radius" default="0.01" />
  <xacro:arg name="mass" default="0.15" />
  <xacro:arg name="mu" default="1.0" />
  <xacro:arg name="fixed_x" default="false" />
  <xacro:arg name="fixed_y" default="false" />
  <xacro:arg name="fixed_z" default="false" />
  <xacro:macro name="finger_loop" params="num">
    <xacro:finger name="finger_${num}" 
      radius="$(arg radius)" mass="$(arg mass)" mu="$(arg mu)" 
      fixed_x="$(arg fixed_x)" fixed_y="$(arg fixed_y)" fixed_z="$(arg fixed_z)" />
    <xacro:if value="${num}">
        <xacro:finger_loop num="${num-1}" />
    </xacro:if>
  </xacro:macro>
  <xacro:property name="finger_idx" value="$(arg num_fingers)" />
  <xacro:finger_loop num="${finger_idx - 1}" />

</robot>